(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{638:function(n,e,t){"use strict";t.r(e);var a=t(7),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("Boxx"),n._v(" "),t("h2",{attrs:{id:"一、使用方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、使用方式"}},[n._v("#")]),n._v(" 一、使用方式")]),n._v(" "),t("p",[t("a",{attrs:{href:"http://echarts.baidu.com/echarts2/doc/doc.html#%E5%BC%95%E5%85%A5ECharts1",target:"_blank",rel:"noopener noreferrer"}},[n._v("！引入 Echarts 的两种方式"),t("OutboundLink")],1)]),n._v(" "),t("h3",{attrs:{id:"_1-模块化包引入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-模块化包引入"}},[n._v("#")]),n._v(" 1.模块化包引入")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('```js\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset="utf-8">\n    <title>ECharts</title>\n\n</head>\n<body>\n    \x3c!-- 为ECharts准备一个具备大小（宽高）的Dom --\x3e\n    <div id="main" style="width: 600px;height:400px;"></div>\n    ...\n    \x3c!-- 引入 echarts.js --\x3e\n    <script src="echarts.min.js"><\/script>\n    <script type="text/javascript">\n        // 基于准备好的dom，初始化echarts实例\n        var myChart = echarts.init(document.getElementById(\'main\'));\n\n        // 指定图表的配置项和数据\n        var option = {\n\n        };\n\n        // 使用刚指定的配置项和数据显示图表。\n        myChart.setOption(option);\n        $(window).resize(function () {//图表随浏览器页面大小变化（响应式）\n            myChart.resize();\n        });\n    <\/script>\n</body>\n</html>\n```\n')])])]),t("h3",{attrs:{id:"_2-模块化单文件引入（推荐）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-模块化单文件引入（推荐）"}},[n._v("#")]),n._v(" 2.模块化单文件引入（推荐）")]),n._v(" "),t("h4",{attrs:{id:"echarts-单文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#echarts-单文件"}},[n._v("#")]),n._v(" Echarts 单文件")]),n._v(" "),t("p",[t("img",{attrs:{src:"https://leanote.com/api/file/getImage?fileId=5832aaa9ab6441366c00c18e",alt:"Echarts单文件"}})]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('```js\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset="utf-8">\n    <title>ECharts</title>\n</head>\n<body>\n    \x3c!-- 为ECharts准备一个具备大小（宽高）的Dom --\x3e\n    <div id="main" style="width: 600px;height:400px;"></div> <div id="main" style="height:400px;"></div>\n    ...\n    \x3c!-- 引入 require.js --\x3e\n    <script src="./js/require.js"><\/script>\n    \x3c!-- 引入 echarts.js --\x3e\n    <script src="./js/echarts.js"><\/script>\n    <script type="text/javascript">\n        require.config({\n            paths: {\n                echarts: \'./js/dist\'\n            }\n        });\n        require(\n            [\n                \'echarts\',\n                \'echarts/chart/line\',   // 按需加载所需图表，如需动态类型切换功能，别忘了同时加载相应图表\n                \'echarts/chart/bar\'\n            ],\n            function (ec) {\n                var myChart = ec.init(document.getElementById(\'main\'));\n                var option = {\n                    ...\n                }\n                myChart.setOption(option);\n                $(window).resize(function () {//图表随浏览器页面大小变化（响应式）\n                    myChart.resize();\n                });\n            }\n        );\n    <\/script>\n</body>\n</html>\n```\n')])])]),t("h2",{attrs:{id:"二、option-配置参数-直角坐标系相关组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、option-配置参数-直角坐标系相关组件"}},[n._v("#")]),n._v(" 二、option 配置参数——直角坐标系相关组件")]),n._v(" "),t("p",[n._v("Attention！如果不是最后一个属性，需在配置后添加逗号英文半角的逗号, 此外，在配置中所有字符也都必须是英文半角的。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("```js\noption = {\n            // /************************************ 标题***********************************/\n            title: {\n                show: true,\n                x: 'center', //横轴位置\n                y: 'top', //竖轴位置\n                //或者方位词控制位置，例如left: 'center'\n                text: '折线图——主标题', //主标题内容\n\n                textStyle: {//主标题的具体样式fontFamily、fontWeight等\n                    fontSize: '18', //字体大小\n                    fontWeight: '600',//字体粗细 —— bold、bolder\n                    fontStyle: 'normal',//字体样式——斜体（italic、oblique）、正常（normal）\n                    fontFamily: 'SimSun',//标题字体\n                    color: '#3b8bce'//标题颜色\n                },\n                backgroundColor: '#f02',//标题模块背景色\n                borderColor: '#ccc',\n                borderWidth: 10,\n                padding: 20,\n                margin: '20',\n\n                link: '', //主标题链接\n                target: 'blank', // 指定窗口打开主标题超链接 self（当前窗口） | blank（新窗口）\n\n\n                subtext: '纯属虚构', // 副标题内容\n                sublink: '', //副标题链接\n                subtextStyle: {//副标题的具体样式fontFamily、fontWeight等\n                    //同主标题样式\n                },\n                subtarget: '',// 指定窗口打开副标题超链接 self（当前窗口） | blank（新窗口）\n                textAlign: 'left', //文本水平对齐\n                textBaseline: 'top', //垂直对齐\n\n                itemGrap: 10, //主标题和副标题的上下间距\n                shadowColor: 'rgba(0,0,0,.5)', //阴影颜色\n                shadowBlur: 10, //阴影模糊大小\n                shadowOffsetX: 10,//偏离水平位置\n                shadowOffsetY: 10//偏离垂直位置\n            },\n            // /*************************************样例***************************************/\n            legend: {\n                show: true,\n                x: 'left',\n                y: 10,\n                textStyle: {//文字样式\n\n                },\n                width: 'auto',//宽高默认自适应\n                height: 'auto',\n                orient: 'vertical',//图例的布局 水平（horizontal） | 垂直（vertical）\n                align: 'left', //图例标记和文本的对齐，默认auto， 图例在左（left） | 图例文字都居中，重叠（center）| 图例在右（right）\n                itemWidth: 20,//图例大小样式\n                itemHeight: 10,\n                /*样例格式*/\n                formatter: '{name}就是这么任性',\n                formatter: function (name) {\n                // 对name参数进行操作，返回想要的样例格式\n                    return echarts.format.truncateText(name + 'page', 50);//number控制样例的宽度\n                },\n                tooltip: { //提示框,可在样例过长被省略时使用\n                    show: true,\n                    position: [50, 50]\n                },\n\n                selectedMode: 'multiple',//图例选选择模式改变系列的显示状态，显示多个（multiple） 或者 单个（single）\n                inactiveColor: '#ccc',//图例关闭时的颜色\n\n                /*边框样式*/\n                borderColor: '#f02',//, '#545454','#999' 边框颜色\n                borderWidth: 1, //边框宽度\n                borderType: 'solid', //边框类型\n\n                /*投影样式*/\n                shadowColor: 'rgba(0,0,0,.5)', //投影颜色\n                shadowBlur: 10, //模糊程度\n                shadowOffsetX: 10, //偏离x的距离\n                shadowOffsetY: 10, //偏离y的距离\n                opacity: 0.5,//可在rbga中直接设置\n                data: ['邮件营销','联盟广告', '视频广告', '直接访问', '搜索引擎']//默认样式\n                data: [{\n                        name:'邮件营销',\n                     // 强制设置图形为圆。\n                        icon: 'circle', //'circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow'\n                        //'image://url'设置为图片，其中 url 为图片的链接。\n                     // 设置文本为红色\n                        textStyle: {\n                            color: 'blue'\n                         }\n                    }\n                },\n                ...\n                ]\n            },\n            // /*************************************网格***********************************/\n            grid: {//整个图表的位置\n                x: '10%', //与容器左边的距离\n                x2: '10%',//与容器右边的距离\n                y: '20%',//与容器上边的距离\n                y2: '20%',//与容器下面的距离\n\n                //如果设置网格宽高则无需设置位置\n                width: '',//网格宽度\n                height: '',//网格高度\n                 containLabel: true//是否包括 刻度标签（XY轴）\n\n                 // /*边框样式*/\n                borderColor: '#f02',//, '#545454','#999' 边框颜色\n                borderWidth: 1, //边框宽度\n                borderType: 'solid', //边框类型\n\n                // /*投影样式*/\n                shadowColor: 'rgba(0,0,0,.5)', //投影颜色\n                shadowBlur: 10, //模糊程度\n                shadowOffsetX: 10, //偏离x的距离\n                shadowOffsetY: 10, //偏离y的距离\n                opacity: 0.5,//可在rbga中直接设置\n\n            },\n            // /************************************工具箱*************************************/\n            toolbox: {\n                show: true,\n                x2: '10%',\n                y: '5%',\n                feature: {\n                    // mark: {show: true},\n                    dataView: {show: true, readOnly: false}, //数据视图\n                    magicType: {show: true, type: ['line', 'bar', 'stack', 'tiled']}, //类型切换\n                    restore: {show: true}, //还原视图\n                    saveAsImage: {show: true}, //保存为图片\n                    dataZoom: { //数据缩放\n                        show: true\n                    },\n                    brush: {//选框组件的按键\n                        show: true,\n                        //对单个工具样式进行设置\n                        iconStyle: {//图标样式\n                            normal: {//正常情况下\n                                borderColor: '#545454',//, '#545454','#999'\n                                borderWidth: 1,\n                                borderType: 'solid',\n                                shadowColor: 'rgba(0,0,0,.5)',\n                                shadowBlur: 10,\n                                shadowOffsetX: 10,\n                                shadowOffsetY: 10,\n                                opacity: 0.5,\n                                textPosition: 'left' //文字位置\n\n                            },\n                            emphasis: {//鼠标经过时，样式属性同上\n\n                            }\n\n                        }\n\n                    }\n                },\n                //对工具箱内所有工具进行相同的样式设置\n                iconStyle: {//图标样式\n                    normal: {\n                        borderColor: '#f02',//, '#545454','#999'\n                        borderWidth: 1,\n                        borderType: 'solid',\n                        shadowColor: 'rgba(0,0,0,.5)',\n                        shadowBlur: 10,\n                        shadowOffsetX: 10,\n                        shadowOffsetY: 10,\n                        opacity: 0.5,\n                        textPosition: 'left'\n\n                    },\n                    emphasis: {//鼠标经过时，样式属性同上\n\n                    }\n\n                }\n\n            },\n            calculable: false,//是否能够拖拽重计，Echarts3不支持\n            // /**************************************X轴*************************************/\n            xAxis: [\n                {\n                    type: 'category',//'value'数值轴，适用于连续数据。\n                    'category'类目轴，适用于离散的类目数据，为该类型时必须通过 data 设置类目数据。\n                    'time'时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月，星期，日还是小时范围的刻度。\n                    'log' 对数轴。适用于对数数据。\n\n                    min: 100,//类目轴中无效\n                    max: 1000,\n                    splitNumber: 5,//坐标轴的分割段数(预估值)，类目轴中无效\n\n                      /*设置x轴名称及样式*/\n                    name: '',//定义横轴名称,默认位置在横轴末端\n                    nameLocation: 'start',//仅三个位置 middle | end\n                    boundaryGap: false, //坐标轴两边留白 ,type 为数值型的时候可设置 [num, num] | [ '%','%']\n                    nameTextStyle:{ /*坐标轴名称样式*/\n                    },\n                    nameGap:  16, //与坐标轴距离\n                    nameRotate : 30,//旋转角度\n\n                    inverse: false,//是否反向显示\n                    silent: false,//静态不交互\n\n                    // /*关于刻度线的样式*/\n                    axisTick: {//是否显示刻度\n                        show: true,\n                        alignWithLabel: true,//类目轴中在 boundaryGap 为 true 的时候有效，可以保证刻度线和标签对齐。\n                        inside: false,\n                        length: 5,\n                        lineStyle:{\n                        color: '#f03',\n                        width: 1,\n                        type: 'solid', //指示器类型 实线（solid） | 点线（dotted） | 虚线（dashed）;\n                        shadowColor: 'rgba(0,0,0,.5)', //阴影颜色\n                        shadowBlur:10, //阴影模糊大小\n                        shadowOffsetX: 10,//偏离水平位置\n                        shadowOffsetY: 10,//偏离垂直位置\n                        opacity: 0.9\n                        }\n                    },\n                    boundaryGap: false, //坐标轴两边留白 ,type 为数值型的时候可设置 [num, num]\n\n                    data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],//默认样式\n\n                    data: [//对单个数据进行样式配置\n                    {\n                        value: '周一',\n                        textStyle:{\n                           color: '#333',\n                           align: 'right',\n                           baseline: 'top'\n                     }\n                     }\n                     ...\n                     ],\n                    axisLabel: {//坐标轴刻度标签的相关设置。\n                        interval: 1, //刻度和数据间隔显示\n                        textStyle: {\n                            color: function (val) {\n                            //对x轴数据进行判断，返回颜色字符串\n                                return val == '周一' ? 'red' : 'green';\n                            }\n                        },\n                        formatter: function (val) {\n                        //控制x轴参数名的格式输出\n                            if (val == '周三') {\n                                return val + 'kg';\n                            } else {\n                                return val;\n                            }\n                        }\n                    }\n                    splitLine: { //图表背景的横轴虚线\n                        show: true\n                    },\n                    splitArea: { //分割区域\n                        show: true\n\n                    }\n                }\n            ],\n            // /**************************************Y轴*************************************/\n            yAxis: [\n                {\n                    //同x轴属性\n                }\n            ],\n            // /************************************提示框**********************************/\n            tooltip: {\n                show: true,\n                trigger: 'item',// 触发类型 数据项图形触发（item） | 坐标轴（xAxis）\n                showContent: true, //是否显示提示框悬浮层\n                alwaysShowContent: false, //永远显示提示框内容\n                triggerOn: 'mousemove', //mousemove //提示框的触发形式 点击（click） | 鼠标移动（mousemove） |不触发（none）\n                showDelay: 0,//浮层显示延迟 ms——！在 triggerOn 为 'mousemove' 时有效。\n                hideDelay: 0,//浮层隐藏延迟 ms——！在 alwaysShowContent 为 'true' 时无效\n                enterable: false, //鼠标能否进入提示框\n                axisPointer: {   // 坐标轴指示器，坐标轴触发有效\n                    type: 'shadow', // 默认为直线，可选为：直线指示器'line'\n                                    // 阴影指示器'shadow' | 十字准星指示器'cross'\n                    axis: 'x',   //指示器坐标轴'x', 'y', 'radius', 'angle'\n                    lineStyle: {//直线指示器样式\n                        color: '#f03',\n                        width: 1,\n                        type: 'solid', //指示器类型 实线（solid） | 点线（dotted） | 虚线（dashed）;\n                        shadowColor: 'rgba(0,0,0,.5)', //阴影颜色\n                        shadowBlur:10, //阴影模糊大小\n                        shadowOffsetX: 10,//偏离水平位置\n                        shadowOffsetY: 10,//偏离垂直位置\n                        opacity: 0.9\n\n                    },\n                    shadowStyle: {//阴影指示器样式，同上\n\n                    },\n                    crossStyle: {//十字准星指示器样式\n                        //同上\n                        textStyle: {// 提示文字的样式\n                            fontSize: '18', //字体大小\n                            fontWeight: '600',//字体粗细 —— bold、bolder\n                            fontStyle: 'normal',//字体样式——斜体（italic、oblique）、正常（normal）\n                            fontFamily: 'SimSun',//字体\n                            color: '#3b8bce'//颜色\n                        }\n\n                    }\n                }\n\n                position: function (point, params, dom) {//返回格式必须是数组Array[]格式 [num, num]\n                    // point:鼠标位置Array\n                    console.info('提示框位置：', params);\n                    return [point[0], 10];\n                },\n                //格式控制器\n                formatter: '{b}<br/>{a0}: {c0}<br />{a1}: {c1}<br/>' + '{a2}: {c2}<br />{a3}: {c3}<br />{a4}: {c4}', //a：系列名，b：数据名，c：数据值\n                formatter: function(params, ticket, callback){\n                    console.info('formatter数据集:',params);\n                },\n\n                //为提示框浮层添加阴影\n                extraCssText: 'box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);'\n\n            },\n            // /************************************数据缩放**********************************/\n            dataZoom: [\n                {    type: 'inside'\n                }\n                {\n                    id: 'dataZoomX',\n                    type: 'slider',\n                    xAxisIndex: [0],\n                    filterMode: 'filter'\n                },\n                {\n                    id: 'dataZoomY',\n                    type: 'slider',\n                    yAxisIndex: [0],\n                    filterMode: 'empty'\n                }\n            ],\n            series: [\n                {\n                    name: '邮件营销',//数据名\n                    type: 'line',\n                    stack: '总量',\n                    symbolSize: 30,//折现图中控制拐点大小\n                    label: {//针对柱状图 ，饼图\n                        //显示数值标签\n                        normal: {//正常情况下\n                            show:true,\n                            position:'inside',//'top''left''right''bottom''inside''insideLeft','insideRight''insideTop''insideBottom''insideTopLeft','insideBottomLeft''insideTopRight''insideBottomRight'\n\n                        },\n                        emphasis: {\n                        //鼠标经过时\n                        }\n                    }\n                    //系列中的数据标注内容\n                    markPoint: {\n                        symbol: 'circle',\n                        //标注图标：'circle', 'rect', 'roundRect','triangle', 'diamond', 'pin', 'arrow','image://url'//标注图标或自定义图片\n                        data: [\n                            {type: 'max', name: '最大值', symbolSize: 200},\n                            {type: 'min', name: '最小值'}\n                        ]\n\n                    },\n                    //系列中的数据标线内容\n                    markLine: {\n                        data: [\n                            {type: 'average', name: '平均值'}\n                        ],\n                        lineStyle: {//数据标线样式\n                            normal: {\n                                // show: true\n                                // type: 'solid'\n                            }\n                        }\n                    },\n                    itemStyle: {\n                        normal: {\n                            barBorderRadius: [5, 5, 0, 0]\n                            color: '#2ec7c9'\n                        }\n\n                    },\n                    data: [\n                    {\n                     value: msglossrate1, //值为变量\n                     name: '邮件营销',\n                     itemStyle: {\n                        normal: {\n                            color: '#00EE00',\n                            label: {\n                                show: function () {\n                                    if (msglossrate1 == 0) {\n                                     return true;\n                                    }\n                                }()\n                            },\n                            labelLine: {\n                                show: function () {\n                                    if (msglossrate1 == 0) {\n                                        return false;\n                                    }\n                                }(),\n                                length: 5\n                            }\n                        }\n                    }\n                    }, 132, 101, 134, 90, 230, 210]\n\n                },\n                {\n                    name: '联盟广告',\n                    type: 'line',\n                    stack: '总量',\n                    data: [220, 182, 191, 234, 290, 330, 310]\n                },\n                {\n                    name: '视频广告',\n                    type: 'line',\n                    stack: '总量',\n                    data: [150, 232, 201, 154, 190, 330, 410]\n                },\n                {\n                    name: '直接访问',\n                    type: 'line',\n                    stack: '总量',\n                    data: [320, 332, 301, 334, 390, 330, 320]\n                },\n                {\n                    name: '搜索引擎',\n                    type: 'line',\n                    stack: '总量',\n                    data: [820, 932, 901, 934, 1290, 1330, 1320]\n                }\n            ]\n        };\n")])])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n\n### 小结\n\n    1.是否显示——>show: true | false， 所有组件都有的一级属性，其实当你在option中写出这个组件名时就已经默认显示true。\n\n    2.文字样式\n    凡是有文字或者数值输出显示的组件，都存在textStyle属性配置文字样式\n    textStyle:{\n        color: '#333',//字体颜色\n        fontSize: '12px',//字体大小\n        fontWeight: 'normal',//字体粗细 —— bold、bolder\n        fontStyle: 'normal', //字体样式——斜体（italic、oblique）、正常（normal）\n        fontFamily: 'SimSun'//宋体\n    },\n    此外padding,margin,backgroundColor,borderColor,borderWidth等属性通常与textStyle同级\n\n    3.位置\n     1) position: left | right | center | [num, num] | ['%','%'] |...\n     拥有此属性的组件有：tooltip(提示框), xAxis(x轴), yAxis(y轴)\n\n     2)  x： , y:  ,x2: , y2:   ——>与容器边框的距离\n          - x: '10%', //与容器左边的距离\n          - x2: '10%',//与容器右边的距离\n          - y: '20%',//与容器上边的距离\n          - y2: '20%',//与容器下面的距离\n     拥有此属性的组件有：title(标题), toolbox(辅助工具箱), grid(网格), legend(图例)\n\n     3) left | right | top | bottom\n     拥有此属性的组件有：title(标题), toolbox(辅助工具箱), grid(网格), legend(图例)\n\n    4.待续......\n\n### ADD OPTION\n```js\n//xAxis 中的 axisLabel 的过长换行\n   formatter: function(value){\n    console.info('params',value);\n    var newParamsName = \"\";// 最终拼接成的字符串\n    var paramsNameNumber = value.length;// 实际标签的个数\n    var provideNumber = 8;// 每行能显示的字的个数\n    var rowNumber = Math.ceil(paramsNameNumber / provideNumber);// 换行的话，需要显示几行，向上取整\n    /**\n    * 判断标签的个数是否大于规定的个数， 如果大于，则进行换行处理 如果不大于，即等于或小于，就返回原标签\n    */\n    // 条件等同于rowNumber>1\n    if (paramsNameNumber > provideNumber) {\n    /** 循环每一行,p表示行 */\n    for (var p = 0; p < rowNumber; p++) {\n    var tempStr = \"\";// 表示每一次截取的字符串\n    var start = p * provideNumber;// 开始截取的位置\n    var end = start + provideNumber;// 结束截取的位置\n    // 此处特殊处理最后一行的索引值\n    if (p == rowNumber - 1) {\n    // 最后一次不换行\n    tempStr = value.substring(start, paramsNameNumber);\n    } else {\n    // 每一次拼接字符串并换行\n    tempStr = value.substring(start, end) + \"\\n\";\n    }\n    newParamsName += tempStr;// 最终拼成的字符串\n    }\n\n    } else {\n    // 将旧标签的值赋给新标签\n    newParamsName = value;\n    }\n    //将最终的字符串返回\n    return newParamsName\n    }\n\n//formatter:function(val){\n//    return val.split(\"\").join(\"\\n\");\n//}\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br"),t("span",{staticClass:"line-number"},[n._v("58")]),t("br"),t("span",{staticClass:"line-number"},[n._v("59")]),t("br"),t("span",{staticClass:"line-number"},[n._v("60")]),t("br"),t("span",{staticClass:"line-number"},[n._v("61")]),t("br"),t("span",{staticClass:"line-number"},[n._v("62")]),t("br"),t("span",{staticClass:"line-number"},[n._v("63")]),t("br"),t("span",{staticClass:"line-number"},[n._v("64")]),t("br"),t("span",{staticClass:"line-number"},[n._v("65")]),t("br"),t("span",{staticClass:"line-number"},[n._v("66")]),t("br"),t("span",{staticClass:"line-number"},[n._v("67")]),t("br"),t("span",{staticClass:"line-number"},[n._v("68")]),t("br"),t("span",{staticClass:"line-number"},[n._v("69")]),t("br"),t("span",{staticClass:"line-number"},[n._v("70")]),t("br"),t("span",{staticClass:"line-number"},[n._v("71")]),t("br"),t("span",{staticClass:"line-number"},[n._v("72")]),t("br"),t("span",{staticClass:"line-number"},[n._v("73")]),t("br"),t("span",{staticClass:"line-number"},[n._v("74")]),t("br")])])],1)}),[],!1,null,null,null);e.default=s.exports}}]);